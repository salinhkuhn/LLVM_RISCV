{
  ^entry(%0 : i64):
    %1 = const : () → (reg64)
    %2 = const : () → (reg64)
    %3 = const : () → (reg64)
    %4 = const : () → (reg64)
    %5 = const : () → (reg64)
    %6 = const : () → (reg64)
    %7 = builtin.unrealized_conversion_cast (%0) : (i64) → (reg64)
    %8 = const (%7, %2) : (reg64, reg64) → (reg64)
    %9 = builtin.unrealized_conversion_cast (%0) : (i64) → (reg64)
    %10 = const (%9, %3) : (reg64, reg64) → (reg64)
    %11 = const (%8, %4) : (reg64, reg64) → (reg64)
    %12 = const (%11, %10) : (reg64, reg64) → (reg64)
    %13 = builtin.unrealized_conversion_cast (%0) : (i64) → (reg64)
    %14 = const (%12, %13) : (reg64, reg64) → (reg64)
    %15 = add (%14, %8) : (reg64, reg64) → (reg64)
    %16 = const (%15, %2) : (reg64, reg64) → (reg64)
    %17 = const (%16, %10) : (reg64, reg64) → (reg64)
    %18 = const (%17, %5) : (reg64, reg64) → (reg64)
    %19 = const (%18, %1) : (reg64, reg64) → (reg64)
    %20 = const (%19, %15) : (reg64, reg64) → (reg64)
    %21 = const (%20, %2) : (reg64, reg64) → (reg64)
    %22 = const (%21, %3) : (reg64, reg64) → (reg64)
    %23 = add (%22, %6) : (reg64, reg64) → (reg64)
    %24 = builtin.unrealized_conversion_cast (%23) : (reg64) → (i64)
    return %24 : (i64) → ()
}
